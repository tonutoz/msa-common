plugins {
	id 'java-library'
	id 'maven-publish'
	id 'org.springframework.boot' version '3.1.7'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'io.whatap.assignment'
version = '0.0.1'

java {
	sourceCompatibility = '17'
}



configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

sourceSets {
	println("sourceSets");

	main {
		java {
			srcDirs=['src/main/java']
		}
		resources {
			excludes=['*']
		}
	}
	testsrc {
		java {
			srcDirs=['src/test/java']
		}
		resources {
			excludes=['*']
		}
	}

}

repositories {
	mavenLocal()
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	compileOnly 'org.projectlombok:lombok'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

task sourceJar(type: Jar) {
	from sourceSets.main.allJava
}


publishing {
	publications {
		maven(MavenPublication) {
			groupId = 'io.whatap.assignment' // groupId
			artifactId = 'msa-common'           // artifactId
			//version = '0.0.1-SNAPSHOT'       // version
			versionMapping {
				usage('java-api') {
					fromResolutionOf('runtimeClasspath')
				}
				usage('java-runtime') {
					fromResolutionResult()
				}
			}
			from components.java
		}
	}
	repositories {
		mavenLocal()
	}
}

bootJar {
	enabled = false
	processResources.exclude("*.properties");
	processResources.exclude("*.xml");
}

jar{
	enabled = true
	processResources.exclude("*.properties");
	processResources.exclude("*.xml");
}


tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
	useJUnitPlatform()
}
project.tasks.publish.dependsOn bootJar